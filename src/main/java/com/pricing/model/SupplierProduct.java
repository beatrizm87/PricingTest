package com.pricing.model;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.pricing.model.enums.ProductStatus;

import lombok.Getter;
import lombok.Setter;

/**
 * Class that maps the supplier_product table
 * 
 * @author beatr
 *
 */
@Getter
@Setter
@Entity
@Table(name="supplier_product")
public class SupplierProduct {
	
	/**
	 * Id generated by sequence
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false)
    @SequenceGenerator(name = "supplierProductSeq", sequenceName = "supplier_product_sequence", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "supplierProductSeq")
	private Long id;

	/**
	 * Supplier
	 */
	@ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
	@JoinColumn(name = "supplier_id", foreignKey = @ForeignKey(name = "supplier_product_supplier_fk"))
	private Supplier supplier;
	
	/**
	 * Product
	 */
	@ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
	@JoinColumn(name = "product_id", foreignKey = @ForeignKey(name = "supplier_product_product_fk"))
	private Product product;
	
	/**
	 * Status
	 */
	@Column(name="status", nullable=false)
	@Enumerated(EnumType.ORDINAL)
	private ProductStatus status;

	/**
	 * Price
	 */
	@Column(name="price", nullable=false)
	private Double price;
}
